{
    "sourceFile": "src/utils/logger.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1678874207357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1678874268010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,20 +4,20 @@\n     log(message: any, ...optionalParams: any[]) {\n         console.log(message, optionalParams);\n     }\n     error(message: any, ...optionalParams: any[]) {\n-        \n+        console.error(message, optionalParams);\n     }\n     warn(message: any, ...optionalParams: any[]) {\n-        \n+        console.warn(message, optionalParams);\n     }\n     debug?(message: any, ...optionalParams: any[]) {\n-        \n+        console.debug(message, optionalParams);\n     }\n     verbose?(message: any, ...optionalParams: any[]) {\n-        throw new Error(\"Method not implemented.\");\n+        console.log(message, optionalParams);\n     }\n     setLogLevels?(levels: LogLevel[]) {\n-        throw new Error(\"Method not implemented.\");\n+        \n     }\n \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1678874734378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,5 +19,11 @@\n     setLogLevels?(levels: LogLevel[]) {\n         \n     }\n \n+}\n+\n+export class Logger {\n+    static log() {\n+        \n+    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1678874754832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,8 @@\n \n }\n \n export class Logger {\n-    static log() {\n-        \n+    static log(...args) {\n+\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1678874826147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,11 +19,5 @@\n     setLogLevels?(levels: LogLevel[]) {\n         \n     }\n \n-}\n-\n-export class Logger {\n-    static log(...args) {\n-\n-    }\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1678874207357,
            "name": "Commit-0",
            "content": "import { LoggerService, LogLevel } from \"@nestjs/common\";\n\nexport class MyLogger implements LoggerService {\n    log(message: any, ...optionalParams: any[]) {\n        console.log(message, optionalParams);\n    }\n    error(message: any, ...optionalParams: any[]) {\n        \n    }\n    warn(message: any, ...optionalParams: any[]) {\n        \n    }\n    debug?(message: any, ...optionalParams: any[]) {\n        \n    }\n    verbose?(message: any, ...optionalParams: any[]) {\n        throw new Error(\"Method not implemented.\");\n    }\n    setLogLevels?(levels: LogLevel[]) {\n        throw new Error(\"Method not implemented.\");\n    }\n\n}"
        }
    ]
}